---
- name: Check installed apps
  become: true
  become_user: "{{ nextcloud_php_user }}"
  ansible.builtin.command: /usr/bin/php occ app:getpath --no-interaction {{ item }}
  args:
    chdir: "{{ nextcloud_current_path }}/nextcloud"
  failed_when: false
  changed_when: false
  register: nextcloud_installed_apps
  loop: "{{ nextcloud_apps }}"

- name: Install apps
  become: true
  become_user: "{{ nextcloud_php_user }}"
  ansible.builtin.command: /usr/bin/php occ app:install --no-interaction --keep-disabled {{ item.item }}
  args:
    chdir: "{{ nextcloud_current_path }}/nextcloud"
  loop: "{{ nextcloud_installed_apps.results }}"
  when: item.rc == 1

- name: List enabled apps
  become: true
  become_user: "{{ nextcloud_php_user }}"
  ansible.builtin.command: /usr/bin/php occ app:list --no-interaction --output=json
  args:
    chdir: "{{ nextcloud_current_path }}/nextcloud"
  when: nextcloud_apps is defined and nextcloud_apps | length > 0
  changed_when: false
  register: nextcloud_app_list

- name: Set nextcloud_enabled_apps variable
  ansible.builtin.set_fact:
    nextcloud_enabled_apps: "{{ (nextcloud_app_list.stdout | from_json).enabled | list }}"
  when: nextcloud_apps is defined and nextcloud_apps | length > 0

- name: Enable apps
  become: true
  become_user: "{{ nextcloud_php_user }}"
  ansible.builtin.command: /usr/bin/php occ app:enable --no-interaction {{ item }}
  args:
    chdir: "{{ nextcloud_current_path }}/nextcloud"
  when: item not in nextcloud_enabled_apps
  loop: "{{ nextcloud_apps }}"
